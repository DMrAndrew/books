<div class="ui-container">
    <div class="create-book__title ui-text-head--2 ui-text--bold">
        Сертификат
    </div>
</div>

<div class="lc-book-text ui-container-fluid wrapper">
{{
form_ajax('onSave', {
class:'',
'data-request-validate':'true',
'data-request-flash':'true',
})
}}

<input type="hidden" name="sender_id" value="{{ sender_id }}">

<div class="create-book__container">
    <div class="create-book__column-left">
        <div class="personal-area__wrap _indent-large typographical-block">
            <div class="title-counter__top">
                <label class="">Изображение </label>
            </div>
            {% component 'certificateUploader' %}
        </div>
        <div class="ui-select-error" data-validate-for="certificateUploader"></div>
    </div>
    <div class="create-book__column-right">
        <div id="input-authors" style="margin-bottom: 16px">
            <div class="ui-input" style="position: relative">
                <label class="ui-input-label">Имя получателя</label>
                <input class="ui-input-item _size-32 books-autocomplete {{ autofocus ? 'should-focus' : '' }}"
                       type="text"
                       name="recipient_name"/>
                <div class="ui-select-hitn"></div>
                <div class="ui-select-error" data-validate-for="recipient_name"></div>

            </div>
        </div>

        <div id="recipient_value"></div>

        <div class="wrapper__header _indent-large ui-input">
            <div class="title-counter__container" data-title-counter="">
                <div class="title-counter__top">
                    <label class="">Сумма перевода</label>
                </div>
                <input class="title-counter__input ui-input-item _size-32" type="number" name="amount"
                       max="{{ user_amount }}">
                <div class="ui-select-hitn"></div>
                <div class="ui-select-error" data-validate-for="amount"></div>
            </div>
        </div>
    </div>

</div>
    <div class="personal-area__wrap _indent-medium _color-gray ui-text-body--3">
        Загружайте изображение с соотношением сторон
        <span class="attention">4:3</span>
        c разрешением
        <span class="attention"> не менее 250x250</span>
        в формате
        <span class="attention">JPG, PNG или GIF </span>
        и размером
        <span class="attention">не более 4МБ.</span>
    </div>



    <div class="personal-area__wrap _indent-large typographical-block">
        <div class="title-counter__top">
            <label class="">Текст</label>
            <label class="title-counter__numbers">
                <span data-counter-number="title">0</span>/{{ maxLengthChars }}
            </label>
        </div>

        <textarea id="description" name="description" maxlength="25"></textarea>
        <div class="ui-select-hitn"></div>
        <div class="ui-select-error" data-validate-for="description"></div>
    </div>

    <div class="wrapper__header _indent-large ui-input">
        <label class="personal-area__wrap _indent-medium ui-radio">
            <input type="radio" name="anonymity" value="1" checked hidden>
            <div class="ui-radio-checker"></div>
            <span class="ui-radio-text">Не анонимно</span>
        </label>
    </div>

    <div class="wrapper__header _indent-large ui-input">
        <label class="personal-area__wrap _indent-medium ui-radio">
            <input type="radio" name="anonymity" value="0" hidden>
            <div class="ui-radio-checker"></div>
            <span class="ui-radio-text">Анонимно</span>
        </label>
    </div>

    <div class="wrapper__footer">
        <button id="crt_btn" type="submit" class="ui-button ui-button-size--32 ui-button-view--2">
            <span>Отправить</span>
        </button>
    </div>
</div>


{{ form_close() }}

<style>
    .ck-editor__editable {
        min-height: 200px;
    }

    .wrapper__footer .ui-button span {
        margin: auto;
    }
</style>
<script>
    let titleMaxLength = 0
    let maxLengthCounter = {{ maxLengthChars }}
    initEditor('description', {
        thenFn: (editor) =>{
            editor.plugins.get( 'WordCount' ).on( 'update', ( evt, stats ) => {
                $('[data-counter-number="title"]').text(stats.characters);
                if (stats.characters > maxLengthCounter) {
                    document.getElementById('crt_btn').setAttribute("disabled","disabled")
                    $('[data-counter-number="title"]').css('color', 'red')
                } else {
                    document.getElementById('crt_btn').removeAttribute("disabled","")
                    $('[data-counter-number="title"]').css('color', '')
                }
            } );
        }
    });

    initAutocomplete({
        container: '#input-authors',
        onRequestHandler: 'CertificateLC::onSearchAuthor',
        options: {
            minLength: 1
        }
    })
</script>

