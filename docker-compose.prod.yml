version: '3'
services:
    nginx:
        image: nginx:1.21.1-alpine
        restart: unless-stopped
        ports:
            - '${APP_PORT:-80}:80'
            - '443:443'
            - '${WEBSOCKETS_LISTEN_PORT:-6002}:${WEBSOCKETS_LISTEN_PORT:-6002}'
        volumes:
            - ./docker/nginx/domain.production.conf:/etc/nginx/conf.d/default.conf:rw
            - ./docker/nginx/snippets:/etc/nginx/snippets/:rw
            - ./docker/nginx/templates:/etc/nginx/templates/:rw
            - ./docker/nginx/ssl:/etc/letsencrypt:rw
            - ./:/var/www/html
        environment:
            NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx/snippets
        networks:
            - sail
        depends_on:
            - site.loc
            - soketi
    site.loc:
        restart: unless-stopped
        build:
            context: docker/php/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                XDEBUG: '${APP_DEBUG:-false}'
        image: sail-8.1/app
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            COMPOSE_INTERACTIVE_NO_CLI: 1
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
    schedule:
        restart: unless-stopped
        image: sail-8.1/app
        environment:
            CONTAINER_ROLE: scheduler
            COMPOSE_INTERACTIVE_NO_CLI: 1
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - site.loc
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        volumes:
            - './docker/soketi/soketi.json:/opt/config.json'
        command: [ "node", "/app/bin/server.js", "start", "--config=/opt/config.json" ]
        environment:
            SOKETI_DEBUG: '0'
            SOKETI_METRICS_SERVER_PORT: '9601'
            COMPOSE_INTERACTIVE_NO_CLI: 1
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        depends_on:
            - site.loc
        networks:
            - sail
    queue:
        restart: unless-stopped
        image: sail-8.1/app
        environment:
            CONTAINER_ROLE: queue
            COMPOSE_INTERACTIVE_NO_CLI: 1
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - site.loc
    mysql:
        image: 'mariadb:10.5'
        ports:
            - "127.0.0.1:3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sailmysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping" ]
    redis:
        image: 'redis:alpine'
        ports:
            - '127.0.0.1:6379:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
networks:
    sail:
        driver: bridge
volumes:
    sailmysql:
        driver: local
    sailredis:
        driver: local
