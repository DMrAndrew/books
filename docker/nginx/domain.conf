server {
    listen 80;
    index index.php;
    server_name localhost;

    client_max_body_size 50m;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    root /var/www/html;

    # redirect from `index.php` (`/index.php` => `/`, `/path/index.php` => `/path/`)
    if ($request_uri ~* "^(.*/)index\.php$") {
        return 301 $1;
    }

    # redirect without trailing slash (`/path/` => `/path`)
    rewrite ^/(.*)/$ /$1 permanent;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    # Перенаправление запроса на PHP-скрипт для проверки токена
    location = /audio-check-token {
        internal;
        proxy_pass http://localhost/allow-play-audio-check-token;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }

    # пакетная передача статического контента
    # для воспроизведения больших аудиофайлов chunk'ами
    location ~* \.(mp3|aac)$ {

        # для разработки
        add_header Audio "chunking";

        # Включаем обработку HTTP Range заголовков
        # для поточной передачи аудиофайлов
        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;

        try_files $uri =404;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        # Буферизация ответов от прокси-сервера
        proxy_buffering on;
        proxy_buffers 8 4k;
        proxy_max_temp_file_size 1024m;

        # Позволяет формат передачи данных частями
        chunked_transfer_encoding on;

        # Включаем обработку MP4 и AAC файлов
        mp4;
        mp4_buffer_size 4M;
        mp4_max_buffer_size 10M;

        # Настройка проверки токена
        # токен хранится в cookie, формируется в php и проверяется в php
        auth_request /audio-check-token;
    }

    location = /favicon.ico { access_log off; log_not_found off; }

    location = /robots.txt {
        alias /var/www/html/robots.dev.txt ;
        access_log off; log_not_found off;
    }

    error_page 404 /index.php;

    location /app/ {
            proxy_pass http://stage_soketi_1:6001/app/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade "websocket";
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            add_header Authorization "Basic Ym9va3Nfc3RhZ2U6U1RhUg==";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  https;
            proxy_set_header X-VerifiedViaNginx yes;



    }

    location /apps/ {
            proxy_pass http://stage_soketi_1:6001/apps/;
            proxy_set_header Host $host;
            add_header Authorization "Basic Ym9va3Nfc3RhZ2U6U1RhUg==";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  https;
            proxy_set_header X-VerifiedViaNginx yes;
    }

    include snippets/static.conf;
    include snippets/php.conf;
    include snippets/blacklist.conf;
}
